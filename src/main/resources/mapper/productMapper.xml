<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.application.usedallea.product.dao.ProductDAO">
    <insert id="createProduct" parameterType="ProductDTO">
        INSERT INTO PRODUCT(
            SELLER_ID,
            IMG_ID,
            TITLE,
            CATEGORY,
            QUALITY_CONDITION,
            PRICE,
            DESCRIPTION,
            STATUS
        )
        VALUES(
            #{sellerId},
            #{imgId},
            #{title},
            #{category},
            #{qualityCondition},
            #{price},
            #{description},
            #{status}
        )
    </insert>

    <select id="getProductId" parameterType="long" resultType="long">
        SELECT
                PRODUCT_ID
        FROM
                PRODUCT
        WHERE
                IMG_ID = #{imgId}
    </select>

    <select id="getProductDetail"  parameterType="long" resultType="ProductDTO">
        SELECT
                *
        FROM
                PRODUCT
        WHERE
                PRODUCT_ID = #{productId}
    </select>
    <update id="updateReadCnt" parameterType="long">
        UPDATE
                PRODUCT
        SET
                READ_COUNT = READ_COUNT + 1
        WHERE
                PRODUCT_ID = #{productId}
    </update>

    <select id="getImgUUID" parameterType="long" resultType="String">
        SELECT
               I.IMG_UUID AS IMG_UUID
        FROM
                PRODUCT P
           JOIN IMG I
            ON  P.IMG_ID = I.IMG_ID
        WHERE
                PRODUCT_ID = #{productId}
    </select>

    <update id="updateProduct" parameterType="ProductDTO">
        UPDATE
                PRODUCT
        SET
                TITLE = #{title},
                CATEGORY = #{category},
                QUALITY_CONDITION = #{qualityCondition},
                PRICE = #{price},
                DESCRIPTION = #{description},
        WHERE
                PRODUCT_ID = #{productId}
    </update>
    
    <delete id="deleteProduct" parameterType="long">
        DELETE FROM
                    PRODUCT
        WHERE
                PRODUCT_ID = #{productId}
    </delete>

</mapper>